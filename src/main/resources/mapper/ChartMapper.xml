<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.munchan.chart_backend.repository.ChartRepository">
    <select id="getDeviceCPUChartData" resultType="ChartData">
        SELECT
            device.title AS "title"
             , round(avg(tpc.cpu)) AS "value"
        FROM
            t_device device
           , t_perf_cpumem tpc
        WHERE
            device.deviceId = tpc.deviceId
            <if test="deviceId != null">
                AND device.deviceId = #{deviceId}
            </if>

            <if test="startDay != null and endDay != null">
                AND tpc.collectTime BETWEEN #{startDay} AND #{endDay}
            </if>
        GROUP BY device.title
        ORDER BY avg(tpc.cpu) DESC
        LIMIT 10;
    </select>

    <select id="getModelDisorderChartData" resultType="ChartData">
        SELECT
            model.title AS "title"
             , COUNT(*) AS "value"
        FROM
            t_device device
           , t_model model
           , t_errors terror
        WHERE
            device.modelId = model.modelId
          AND terror.deviceId = device.deviceId
            <if test="deviceId != null">
                AND device.deviceId = #{deviceId}
            </if>

            <if test="startDay != null and endDay != null">
                AND terror.occurDate BETWEEN #{startDay} AND #{endDay}
            </if>
        GROUP BY model.title
        ORDER BY COUNT(*) DESC
            LIMIT 10;

    </select>

    <select id="getDisorderTypeChartData" resultType="ChartData">
        SELECT
            err.title as "title"
             , COUNT(*) as "value"
        FROM
            t_device de
           , t_errors err
        WHERE
            de.deviceId = err.deviceId
            <if test="deviceId != null">
                AND de.deviceId = #{deviceId}
            </if>

            <if test="startDay != null and endDay != null">
                AND err.occurDate BETWEEN #{startDay} AND #{endDay}
            </if>
        GROUP BY err.title
        order by COUNT(*) desc
        LIMIT 10;

    </select>

    <select id="getDailyDisorderChartData" resultType="ChartData">
        SELECT
            DATE_FORMAT(err.occurDate,'%Y년%m월%d일') AS "title"
             , COUNT(*) as "value"
        FROM
            t_device de
           , t_errors err
        WHERE
            de.deviceId = err.deviceId
            <if test="deviceId != null">
                AND de.deviceId = #{deviceId}
            </if>

            <if test="startDay != null and endDay != null">
                AND err.occurDate BETWEEN #{startDay} AND #{endDay}
            </if>
        GROUP BY
            DATE_FORMAT(err.occurDate,'%Y년%m월%d일')
        ORDER BY COUNT(*) desc
    </select>


    <select id="getDeviceIdByDeviceName" resultType="Integer">
        SELECT deviceId from t_device where title = #{deviceName}
    </select>

    <select id="getAllDeviceName" resultType="String">
        SELECT title from t_device
        <if test="deviceName != null || ''.equals(deviceName)">
            where title like concat(#{deviceName}, "%")
        </if>
        order by title
    </select>

    <select id="getMaxErrorDeviceName" resultType="ChartData">
        SELECT
            td.title as `title`
             , COUNT(*) as `value`
        FROM
            t_device td
           , t_errors tr
        WHERE
            td.deviceId = tr.deviceId
        GROUP BY td.title ORDER BY COUNT(*) DESC LIMIT 1
    </select>

    <select id="getDeviceInformation" resultType="DeviceData">
        SELECT
            deviceId
             , (SELECT title FROM t_device WHERE deviceId = #{deviceId}) AS "deviceName"
             , round(avg(CPU)) "averageMemoryUsage"
             , round(avg(mem)) "averageCPUUsage"
             , round(avg(temperature)) "averageTemperature"
        FROM t_perf_cpumem cp
        WHERE cp.deviceId = #{deviceId};
    </select>







</mapper>